[2024-07-21T10:43:14.362+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-07-21T10:43:14.557+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: churn_model_DAG.model_training manual__2024-07-21T10:43:06.008555+00:00 [queued]>
[2024-07-21T10:43:14.562+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: churn_model_DAG.model_training manual__2024-07-21T10:43:06.008555+00:00 [queued]>
[2024-07-21T10:43:14.563+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-07-21T10:43:14.570+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): model_training> on 2024-07-21 10:43:06.008555+00:00
[2024-07-21T10:43:14.580+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:62: DeprecationWarning: This process (pid=741) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-07-21T10:43:14.581+0000] {standard_task_runner.py:64} INFO - Started process 757 to run task
[2024-07-21T10:43:14.582+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'churn_model_DAG', 'model_training', 'manual__2024-07-21T10:43:06.008555+00:00', '--job-id', '486', '--raw', '--subdir', 'DAGS_FOLDER/model_pipeline_DAG.py', '--cfg-path', '/tmp/tmpgud6upgq']
[2024-07-21T10:43:14.583+0000] {standard_task_runner.py:91} INFO - Job 486: Subtask model_training
[2024-07-21T10:43:14.618+0000] {task_command.py:426} INFO - Running <TaskInstance: churn_model_DAG.model_training manual__2024-07-21T10:43:06.008555+00:00 [running]> on host 6e10856c4017
[2024-07-21T10:43:14.673+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='churn_model_DAG' AIRFLOW_CTX_TASK_ID='model_training' AIRFLOW_CTX_EXECUTION_DATE='2024-07-21T10:43:06.008555+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-07-21T10:43:06.008555+00:00'
[2024-07-21T10:43:14.674+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-07-21T10:43:15.024+0000] {file_store.py:321} WARNING - Malformed experiment 'mlruns'. Detailed error Yaml file '/opt/***/dags/data/mlruns/mlruns/meta.yaml' does not exist.
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/mlflow/store/tracking/file_store.py", line 317, in search_experiments
    exp = self._get_experiment(exp_id, view_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/mlflow/store/tracking/file_store.py", line 410, in _get_experiment
    meta = FileStore._read_yaml(experiment_dir, FileStore.META_DATA_FILE_NAME)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/mlflow/store/tracking/file_store.py", line 1341, in _read_yaml
    return _read_helper(root, file_name, attempts_remaining=retries)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/mlflow/store/tracking/file_store.py", line 1334, in _read_helper
    result = read_yaml(root, file_name)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/mlflow/utils/file_utils.py", line 312, in read_yaml
    raise MissingConfigException(f"Yaml file '{file_path}' does not exist.")
mlflow.exceptions.MissingConfigException: Yaml file '/opt/***/dags/data/mlruns/mlruns/meta.yaml' does not exist.
[2024-07-21T10:43:15.086+0000] {logging_mixin.py:188} WARNING - 2024/07/21 10:43:15 WARNING mlflow.utils.git_utils: Failed to import Git (the Git executable is probably not on your PATH), so Git SHA is not available. Error: Failed to initialize: Bad git executable.
The git executable must be specified in one of the following ways:
    - be included in your $PATH
    - be set via $GIT_PYTHON_GIT_EXECUTABLE
    - explicitly set via git.refresh(<full-path-to-git-executable>)

All git commands will error until this is rectified.

This initial message can be silenced or aggravated in the future by setting the
$GIT_PYTHON_REFRESH environment variable. Use one of the following values:
    - quiet|q|silence|s|silent|none|n|0: for no message or exception
    - warn|w|warning|log|l|1: for a warning message (logging level CRITICAL, displayed by default)
    - error|e|exception|raise|r|2: for a raised exception

Example:
    export GIT_PYTHON_REFRESH=quiet
[2024-07-21T10:47:22.002+0000] {logging_mixin.py:188} INFO - Run completed!
[2024-07-21T10:47:22.005+0000] {python.py:237} INFO - Done. Returned value was: None
[2024-07-21T10:47:22.009+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-07-21T10:47:22.060+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=churn_model_DAG, task_id=model_training, run_id=manual__2024-07-21T10:43:06.008555+00:00, execution_date=20240721T104306, start_date=20240721T104314, end_date=20240721T104722
[2024-07-21T10:47:22.130+0000] {local_task_job_runner.py:243} INFO - Task exited with return code 0
[2024-07-21T10:47:22.153+0000] {taskinstance.py:3503} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-07-21T10:47:22.154+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
